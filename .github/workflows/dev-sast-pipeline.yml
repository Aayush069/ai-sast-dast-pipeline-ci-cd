name: Dev SAST Pipeline

on:
    push:
      branches: [ "main" ]
  
    # Leave this empty (i.e., pull_request:) to trigger on PRs to all branches
    pull_request:
      branches: [ "main" ]  # Only triggers on PRs targeting 'main'
  
    # Scheduled run every Friday at 12:00 PM IST (6:30 AM UTC)
    # schedule:
    #   - cron: '30 6 * * 5'
  
jobs:
  sast:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    name: Run SAST (Bandit + Semgrep)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Bandit and converter
        run: |
          pip install bandit
          pip install bandit-sarif-formatter
      
      - name: Install Semgrep CLI
        run: pip install semgrep

      - name: Run Bandit
        run: |
          # Create a 'reports' directory if it doesn't exist
          mkdir -p reports
      
          # Run Bandit on the entire project directory (recursive)
          # -x tests        → exclude the 'tests' folder
          # -f json         → output the results in JSON format
          # -o ...          → save the output to 'reports/bandit_report.json'
          # -ll             → include low, medium, and high severity issues
          # -iii            → show issue context lines in the report
          bandit -r . \
            -x tests \
            -f json \
            -o reports/bandit_report.json \
            -ll -iii || true
          
          bandit -r . \
            -x tests \
            --format sarif \
            --output reports/bandit_report.sarif || true

      - name: Upload Bandit SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/bandit_report.sarif
          category: bandit
          
      - name: Run Semgrep via CLI
        run: |
          mkdir -p reports

          semgrep --config auto \
                  --exclude tests \
                  --json \
                  --output reports/semgrep_report.json || true
          
          semgrep --config auto \
                  --exclude tests \
                  --sarif \
                  --output reports/semgrep_report.sarif || true              

      - name: Upload Semgrep SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/semgrep_report.sarif
          category: semgrep
      
      - name: Install Gitleaks
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.27.2/gitleaks_8.27.2_linux_x64.tar.gz -o gitleaks.tar.gz
          tar -xzf gitleaks.tar.gz
          sudo mv gitleaks /usr/local/bin/
          gitleaks version

      - name: Run Gitleaks (JSON + SARIF)
        run: |
          mkdir -p reports

          # JSON report
          gitleaks detect \
            --source . \
            --no-git \
            --exclude-paths tests \
            --report-format json \
            --report-path reports/gitleaks_report.json || true

          # SARIF report (for GitHub Security)
          gitleaks detect \
            --source . \
            --no-git \
            --report-format sarif \
            --report-path reports/gitleaks_report.sarif || true

      - name: Upload Gitleaks SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/gitleaks_report.sarif
          category: gitleaks


      # Makes the report downloadable from the Actions tab
      - name: Upload Bandit, Semgrep and Gitleaks reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: reports/
        